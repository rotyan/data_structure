
#include<cstdio>
//题目：求两个格式为YYYYMMDD格式、空格分开输入、的日期，的相差天数。【若两日期连续则输出两天】
/*
分析：if判断是否连续，连续输出2，否则输出天数之差加1的数值。依次用y记录年数之差，m记录同年间月数之差，d记录天数之差。
而最头疼的是闰年和大小月方面。根据.......放弃啦！
答案思路：假设第一个早于第二个日期（否则交换即可）。然后不断令日期自增，直到第一个日期等于第二个日期为止。
具体处理时，当加了一天后当前天数等于当前月份所拥有的天数加一，那么令月份加一，同时天数重置为1。月数m为13时，令年份y++，m=1.
为了方便取每个月天数，定一个二维数组int month[13][2]，用于存放每个月天数，第二维0表示平年、1表示闰年。
*/
int month[13][2] = {
    {0,0},{31,31},{28,29},{31,31},{30,30},{31,31},{30,30},{31,31},{31,31},{30,30},{31,31},{30,30},{31,31}
};

bool isLeap(int year){
    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
}

int main(){
    int time1, y1, m1, d1;
    int time2, y2, m2, d2;
    
    while(scanf("%d%d",&time1,&time2) != EOF){
        if(time1 > time2){
            int temp = time1;
            time1 = time2;
            time2 = temp;
        }
        y1 = time1 / 10000, m1 = time1 / 100 % 100, d1 = time1 % 100;
        y2 = time2 / 10000, m2 = time2 / 100 % 100, d2 = time2 % 100;
        int ans = 1;
        if(y1 < y2 || m1 < m2 || d1 < d2){
            d1++;
            if(d1 == month[m1][isLeap(y1)] + 1){
                m1++;
                d1 = 1;
            }
            if(m1 == 13){
                y1++;
                m1 = 1;
            }
            ans++;
        }
    printf("%d\n", ans); 
    }
    return 0;
}
